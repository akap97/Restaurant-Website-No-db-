{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/CommentForm.js","components/DishdetailComponent.js","components/HomeComponent.js","components/AboutComponent.js","components/ContactComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","to","id","width","src","image","alt","name","Menu","props","menu","dishes","map","key","isLoading","errMess","active","Header","toggleNav","bind","toggleModal","handleLogin","state","isNavOpen","isModalOpen","this","setState","event","alert","username","value","password","remember","checked","preventDefault","Fragment","light","expand","href","height","isOpen","navbar","outline","toggle","onSubmit","htmlFor","type","innerRef","input","check","color","Component","Footer","required","val","length","maxLength","len","CommentForm","handleSubmit","values","postComment","dishId","rating","author","comment","md","select","model","text","placeholder","validators","minLength","show","messages","textarea","rows","size","offset","RenderComments","comments","commentcomp","Intl","DateTimeFormat","year","month","day","format","Date","date","in","RenderDish","transformProps","exitTransform","top","description","DishDetail","RenderCard","item","designation","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","RenderLeader","enterOpacity","tag","left","middle","object","body","heading","About","leaders","title","list","isNumber","isNaN","Number","validEmail","test","Contact","console","log","JSON","stringify","postFeedback","role","checkbox","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","message","feedback","firstname","lastname","telnum","email","newFeedback","resetFeedbackForm","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","agree","contactType","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d2a9e63e.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => {\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n};","export const baseUrl = \"http://localhost:3001/\";\n","import React from 'react';\n\nimport {\n    Card, CardImg, CardImgOverlay,\n    CardTitle, Breadcrumb, BreadcrumbItem\n} from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl';\n\n\nfunction RenderMenuItem({ dish, onClick }) {\n    return (\n        <Card>\n            <Link to={`/menu/${dish.id}`}>\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} /> <CardImgOverlay>\n                    <CardTitle>{dish.name}</CardTitle>\n                </CardImgOverlay>\n            </Link>\n        </Card>\n    );\n}\n\nconst Menu = (props) => {\n\n    const menu = props.dishes.dishes.map((dish) => {\n        return (\n            <div className=\"col-12 col-md-5 m-1\" key={dish.id}>\n                <RenderMenuItem dish={dish} />\n            </div>\n        );\n    });\n    if (props.dishes.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.dishes.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h4>{props.dishes.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else\n        return (\n            <div className=\"container\">\n                <div className='row'>\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Menu</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {menu}\n                </div>\n            </div>\n        );\n}\n\nexport default Menu;","import React, { Component } from 'react';\nimport {\n    Navbar, NavbarBrand, Nav, NavbarToggler,\n    Collapse, NavItem, Jumbotron, Button,\n    Modal, ModalHeader, ModalBody, FormGroup,\n    Input, Label, Form\n} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n    handleLogin(event) {\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value +\n            \" password \" + this.password.value +\n            \" Remeber : \" + this.remember.checked);\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Navbar light expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/about'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\n                                </NavItem>\n                            </Nav>\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    <Button outline onClick={this.toggleModal}>\n                                        <span className=\"fa fa-sign-in fa-lg\">Login</span>\n                                    </Button>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Ristorante con Fusion</h1>\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                    innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={(input) => this.password = input} />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                        innerRef={(input) => this.remember = input} />\n                                    Remember me\n                        </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return (\n        <div className=\"footer\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-4 offset-1 col-sm-2\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to='/home'>Home</Link></li>\n                            <li><Link to='/aboutus'>About Us</Link></li>\n                            <li><Link to='/menu'>Menu</Link></li>\n                            <li><Link to='/contactus'>Contact Us</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-7 col-sm-5\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                                confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-4 align-self-center\">\n                        <div className=\"text-center\">\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport {\n    Navbar, Nav,NavItem,\n    Button,Modal, ModalHeader, ModalBody,\n     Label, Row,Col\n} from 'reactstrap';\n\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength =(len) => (val) => !(val) || (val.length <= len )\nconst minLength =(len) => (val) => (val) && (val.length >= len )\n\n\nclass CommentForm extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            isModalOpen: false\n        }\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    toggleModal() {\n        this.setState(\n            {\n                isModalOpen: !this.state.isModalOpen\n            }\n        )\n    }\n    handleSubmit(values) {\n      this.toggleModal();\n      this.props.postComment(this.props.dishId,values.rating,values.author,values.comment)\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Navbar light expand=\"md\">\n                    <div className=\"container\">\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <Button outline onClick={this.toggleModal}>\n                                    <span className=\"fa fa-pencil fa-lg\"> Submit Comment</span>\n                                </Button>\n                            </NavItem>\n                        </Nav>\n\n                    </div>\n                </Navbar>\n\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Subbmit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                        <Row className=\"form-group\">\n                        <Label htmlFor=\"ratings\" md={2}>Ratings</Label>\n                        <Col md={10}>\n                        <Control.select model=\".ratings\" name=\"ratings\"\n                        className=\"form-control\">\n                        <option>1</option>\n                        <option>2</option>\n                        <option>3</option>\n                        <option>4</option>\n                        <option>5</option>\n\n                        </Control.select>\n                                </Col>\n                                </Row>\n                        \n                        <Row className=\"form-group\">\n                                <Label htmlFor=\"name\" md={2}>Your Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\n                                        placeholder=\"Your Name\"\n                                        className=\"form-control\"\n                                        validators={{required,minLength:minLength(3), maxLength : maxLength(15)}}\n                                        />\n                                        <Errors \n                                        className=\"text-danger\"\n                                        model=\".name\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required : \"required \",\n                                            minLength:\"Must be greater than 2 chars\",\n                                            maxLength:'must be 15 chars or less'\n                                        }}\n                                        />\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"comment\" md={2}>Comments</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\n                                        placeholder=\"Add your comments\"\n                                        rows=\"5\"\n                                        className=\"form-control\"\n                                    />\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 10, offset: 2 }}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n\n\n            </React.Fragment>\n        )\n    }\n\n}\nexport default CommentForm;","import React from 'react';\nimport {\n    Card, CardImg, CardText, CardBody,\n    CardTitle, Breadcrumb, BreadcrumbItem\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport CommentForm from './CommentForm';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nfunction RenderComments({ comments, postComment, dishId }) {\n    if (comments != null) {\n        const commentcomp = \n        comments.map(comment => {\n            return (\n                <li key={comment.id} >\n                    <p>{comment.comment}</p>\n                    <p>--{comment.author}\n                        &nbsp;\n                        {new Intl.DateTimeFormat('en-US', {\n                            year: 'numeric',\n                            month: 'long',\n                            day: '2-digit'\n                        }).format(new Date(comment.date))}\n                    </p>\n                </li>\n\n            )\n        })\n        return (\n            <div>\n                <h4> Comments </h4>\n                <ul className='list-unstyled'>\n                <Stagger in>\n                <Fade in>\n                    {commentcomp}\n                    <CommentForm\n                        dishId={dishId}\n                        postComment={postComment} />\n                        </Fade>\n                        </Stagger>\n                </ul>\n\n            </div>\n        )\n    }\n    else {\n        return (<div></div>)\n    }\n}\n\nfunction RenderDish({ dish }) {\n    if (dish != null) {\n        return (\n            <div >\n            <FadeTransform\n                in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                <Card>\n                    <CardImg top src={baseUrl + dish.image} alt={dish.name} />\n                    <CardBody>\n                        <CardTitle>{dish.name}</CardTitle>\n                        <CardText>{dish.description}</CardText>\n\n                    </CardBody>\n\n                </Card>\n                </FadeTransform>\n            </div>\n        )\n    }\n    else {\n        return (\n            <div></div>\n        )\n    }\n}\n\nconst DishDetail = (props) => {\n    if (props.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else if (props.dish == null) {\n        return (<div></div>)\n    }\n    else\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>{props.dish.name}</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-5 m-1\">\n                        <RenderDish dish={props.dish} />\n                    </div>\n                    <div className=\"col-12 col-md-5 m-1\">\n                        <RenderComments\n                            comments={props.comments}\n                            postComment={props.postComment}\n                            dishId={props.dish.id} />\n                    </div>\n                </div>\n            </div>\n        )\n}\n\n\n\nexport default DishDetail;\n","import React from \"react\";\nimport {\n    Card, CardImg, CardText, CardBody,\n    CardTitle, CardSubtitle\n} from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform } from 'react-animation-components';\nfunction RenderCard({ item, isLoading, errMess }) {\n\n    if (isLoading) {\n        return (\n            <Loading />\n        );\n    }\n    else if (errMess) {\n        return (\n            <h4>{errMess}</h4>\n        );\n    }\n    else\n        return (\n            <FadeTransform\n                in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n            <Card>\n            <CardImg src={baseUrl + item.image} alt={item.name} />\n                <CardBody>\n                    <CardTitle>{item.name}</CardTitle>\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\n                    <CardText>{item.description}</CardText>\n                </CardBody>\n            </Card>\n            </FadeTransform>\n        );\n\n}\n\nfunction Home(props) {\n    return (\n        <div className=\"container\">\n            <div className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.dish}\n                        isLoading={props.dishesLoading}\n                        errMess={props.dishesErrMess}\n                    />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                <RenderCard item={props.promotion} \n                isLoading={props.promoLoading}\n                 errMess={props.promoErrMess} />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                <RenderCard item={props.leader} \n                isLoading={props.leaderLoading}\n                errMess={props.leaderErrMess}\n                />\n            </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Home;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl'; \nimport { Fade  } from 'react-animation-components';\n\nfunction RenderLeader({leader})\n{\n    return(\n        <Fade in enterOpacity={0.85} key={leader.id}>\n        <div key={leader.id} className=\"col-12 mt-5\">\n            <Media tag=\"li\">\n                <Media left middle>\n                    <Media object src={baseUrl + leader.image} alt={leader.name}/>\n                </Media>\n            <Media body className=\"ml-5\">\n                <Media heading>{leader.name}</Media>\n                <p>{leader.designation}</p>\n                <p>{leader.description}</p>\n            </Media>\n            </Media>\n\n           \n\n        </div>\n        </Fade>\n    )\n}\n\n\n\nfunction About(props) {\n\n    const leaders = props.leaders.map((leader) => {\n        return (\n            <div>\n            <RenderLeader leader={leader} />\n            </div>\n        );\n    });\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <Media list>\n                        {leaders}\n                    </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Label, Row, Col, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors} from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len)\nconst minLength = (len) => (val) => (val) && (val.length >= len)\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleSubmit(values) {\n        console.log('Current State is: ' + JSON.stringify(values));\n        this.props.postFeedback(values);\n        \n        // event.preventDefault();\n    }\n\n\n    render() {\n        return (\n            <div className=\"container\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>Contact Us</h3>\n                    <hr />\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\" href=\"https://www.skype.com/en/\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us  your feedback</h3>\n                    </div>\n\n                    <div className=\"col-12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{ required, minLength: minLength(3), maxLength: maxLength(15) }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: \"required \",\n                                            minLength: \"Must be greater than 2 chars\",\n                                            maxLength: 'must be 15 chars or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{ required, minLength: minLength(3), maxLength: maxLength(15) }}\n\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: \"required \",\n                                            minLength: \"Must be greater than 2 chars\",\n                                            maxLength: 'must be 15 chars or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. Number\"\n                                        className=\"form-control\"\n                                        validators={{ required, minLength: minLength(3), maxLength: maxLength(15), isNumber }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: \"required \",\n                                            minLength: \"Must be greater than 2 digits\",\n                                            maxLength: 'must be 15 digits or less',\n                                            isNumber: \"must only contain digits\"\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{ required, validEmail }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: \"required \",\n                                            validEmail: \"Please enter a correct mail id\"\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 6, offset: 2 }}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\n                                                className=\"form-check-input\"\n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{ size: 3, offset: 1 }}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 10, offset: 2 }}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                            </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n\n                </div>\n\n            </div>\n        );\n    }\n\n\n}\nexport default Contact;","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl'\n\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    };\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n        method: \"POST\",\n        body: JSON.stringify(newComment),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            throw error;\n        })\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error => { console.log('post comments', error.message);\n         alert('Your comment could not be posted\\nError: ' \n         + error.message); });\n};\nexport const fetchDishes = () => (dispatch) => {\n\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)));\n}\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\nexport const fetchComments = () => (dispatch) => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const fetchPromos = () => (dispatch) => {\n\n    dispatch(promosLoading());\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch(error => dispatch(promosFailed(error.message)));\n}\n\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\n\n\nexport const fetchLeaders = () => (dispatch) => {\n\n    dispatch(leadersLoading());\n\n    return fetch(baseUrl + 'leaders')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + \": \" + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(leaders => dispatch(addLeaders(leaders)))\n        .catch(error => dispatch(leadersFailed(error.message)));\n}\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});\n\n\n\nexport const postFeedback = ({firstname, lastname, telnum, email, message}) => (dispatch) => {\n\n    const newFeedback = {\n        firstname: firstname,\n        lastname: lastname,\n        telnum: telnum,\n        email: email,\n        message: message\n    };\n    newFeedback.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'feedback', {\n        method: \"POST\",\n        body: JSON.stringify(newFeedback),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                throw error;\n            })\n        .then(response => response.json())\n        .then(feedback => alert(\"Thankyou for your feedback\" + JSON.stringify(feedback)))\n        .catch(error => { console.log('post feedback', error.message); alert('Your feedback could not be posted\\nError: ' + error.message); });\n};","export const ADD_COMMENT = \"ADD_COMMENT\";\nexport const DISHES_LOADING = \"DISHES_LOADING\";\nexport const DISHES_FAILED = \"DISHES_FAILED\";\nexport const ADD_DISHES = \"ADD_DISHES\";\nexport const ADD_COMMENTS = \"ADD_COMMENTS\";\nexport const COMMENTS_FAILED = \"COMMENTS_FAILED\";\nexport const PROMOS_LOADING = \"PROMOS_LOADING\";\nexport const ADD_PROMOS = \"ADD_PROMOS\";\nexport const PROMOS_FAILED = \"PROMOS_FAILED\";\nexport const ADD_LEADERS = \"ADD_LEADERS\";\nexport const LEADERS_LOADING=\"LEADERS_LOADING\";\nexport const LEADERS_FAILED=\"LEADERS_FAILED\";","import React, { Component } from 'react';\nimport Menu from './MenuComponent'\nimport Header from './HeaderComponent'\nimport Footer from './FooterComponent'\nimport DishDetail from './DishdetailComponent'\nimport Home from './HomeComponent'\nimport About from './AboutComponent'\nimport Contact from './ContactComponent'\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { postComment, fetchDishes, fetchComments, fetchPromos ,fetchLeaders ,postFeedback } from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nconst mapStateToProps = state => {\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n  postFeedback:(feedback) => dispatch(postFeedback(feedback)),\n  fetchDishes: () => { dispatch(fetchDishes()) },\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\n  fetchComments: () => dispatch(fetchComments()),\n  fetchPromos: () => dispatch(fetchPromos()),\n  fetchLeaders: () => dispatch(fetchLeaders())\n\n});\n\n\n\nclass Main extends Component {\n\n  componentDidMount() {\n    this.props.fetchDishes();\n    this.props.fetchComments();\n    this.props.fetchPromos();\n    this.props.fetchLeaders();\n  }\n\n\n  render() {\n\n    const HomePage = () => {\n      return (\n        <Home\n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n          dishesLoading={this.props.dishes.isLoading}\n          dishesErrMess={this.props.dishes.errMess}\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n          promoLoading={this.props.promotions.isLoading}\n          promoErrMess={this.props.promotions.errMess}\n          leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n          leaderLoading={this.props.leaders.isLoading}\n          leaderErrMess={this.props.leaders.errMess}\n        />\n      );\n    }\n\n\n    const DishWithId = ({ match }) => {\n      return (\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\n          isLoading={this.props.dishes.isLoading}\n          errMess={this.props.dishes.errMess}\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\n          commentsErrMess={this.props.comments.errMess}\n          postComment={this.props.postComment}\n\n        />\n\n      );\n    };\n\n\n    const AboutUs = () => {\n      return (\n        <About leaders={this.props.leaders.leaders} />\n      )\n    }\n\n    return (\n      <div>\n        <Header />\n        <TransitionGroup>\n        <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n          <Switch location={this.props.location}>\n       \n          <Route path='/home' component={HomePage} />\n          {/*how to create a Route for component with properties */}\n\n          <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\n\n          <Route path=\"/menu/:dishId\" component={DishWithId} />\n\n          <Route path=\"/about\" component={AboutUs} />} />\n\n          <Route exact path='/contactus' component={() => <Contact postFeedback={this.props.postFeedback} />} />\n\n          <Redirect to='/home' />\n\n        </Switch>\n        </CSSTransition>\n        </TransitionGroup>\n\n        <Footer />\n\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","import * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = {\n    isLoading: true,\n    errMess: null,\n    dishes: []\n    }, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading:false , errMess:null,dishes:action.payload}\n\n        case ActionTypes.DISHES_LOADING:\n            return {...state, isLoading:true , errMess:null,dishes:[]}\n\n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading:false , errMess:action.payload,dishes:[]}\n        default:\n            return state;\n         \n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\n    switch (action.type) {\n      case ActionTypes.ADD_COMMENTS:\n        return {...state, errMess: null, comments: action.payload};\n  \n      case ActionTypes.COMMENTS_FAILED:\n        return {...state, errMess: action.payload};\n  \n      case ActionTypes.ADD_COMMENT:\n          var comment = action.payload;\n          return { ...state, comments: state.comments.concat(comment)};\n  \n      default:\n        return state;\n    }\n  };","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state  = { isLoading: true,\n                                        errMess: null,\n                                        promotions:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PROMOS:\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\n\n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading: true, errMess: null, promotions: []}\n\n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n          return state;\n      }\n};","\nimport * as ActionTypes from './ActionTypes';\n\n\nexport const Leaders = (state = { isLoading: true,\n    errMess: null,\n    leaders: []\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_LEADERS:\n            return { ...state, isLoading: false, errMess: null, leaders: action.payload };\n\n        case ActionTypes.LEADERS_LOADING:\n            return { ...state, isLoading: true, errMess: null, leaders: [] }\n\n        case ActionTypes.LEADERS_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload };\n\n        default:\n            return state;\n    }\n};","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent'\nimport './App.css';\nimport { BrowserRouter} from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport {ConfigureStore} from './redux/configureStore'\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <Provider store= {store}>\n      <BrowserRouter>\n      <div>\n        <Main />\n      </div>\n      </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers , applyMiddleware} from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { Dishes } from './dishes';\n\nimport { Comments } from './comments'\nimport { Promotions } from './promotions'\nimport { Leaders } from './leaders'\nimport thunk from 'redux-thunk'\nimport logger from 'redux-logger'\nimport { InitialFeedback } from './forms';\n \n\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes:Dishes,\n            comments:Comments,\n            promotions:Promotions,\n            leaders:Leaders,\n            ...createForms({\n                feedback : InitialFeedback\n            })\n        \n        }),\n        applyMiddleware(thunk, logger)    \n    );\n\n    return store;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport App from './App';\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}